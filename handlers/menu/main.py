from utils import texts
from utils import util, log_bot
from database import DatabaseManager

from pyrogram import enums, Client, filters
from keyboards import keyboards, inlines

def register_all_menu_handlers(app: Client, db: DatabaseManager, log_warn):
    @app.on_message(filters.command(['–º–µ–Ω—é', 'menu'], prefixes=['', '/', '.']) & filters.private)
    async def menu(_, msg):
        user = await util.check_user(db, msg)
        await log_bot(msg)
        
        await msg.reply_text('–ó–∞–≥—Ä—É–∂–∞—é –º–µ–Ω—é..üìç',
            reply_markup=keyboards.menu_kb
        )

    # Define individual handler functions
    async def handle_anketa(_, msg):
        user = db.find_by_column('users', 'id', msg.from_user.id)
        if user:
            user = user[0]
            name = util.get_user_name(user)
            age = user['age']
            city = user['city']
            birthdate = user['birthdate']
            when_added = user['when_added']
            vip = user['vip']
            relationship = user['relationship']

            text  = f"–ê–Ω–∫–µ—Ç–∞ {name}:\n"
            text += f"–ì–æ—Ä–æ–¥: {city if city else '–ù–µ —É–∫–∞–∑–∞–Ω('}:\n"
            text += f"–î–†: {birthdate if birthdate else '–ù–µ —É–∫–∞–∑–∞–Ω'} ({age} –ª–µ—Ç)\n"
            text += f"–ö–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω: {when_added}\n"
            text += f"–í–∏–ø–∫–∞: {vip if vip else '–ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª –≤–∏–ø–∫—É'}\n"
            text += f"–û—Ç–Ω–æ—à–µ–Ω–∏—è: {relationship if relationship != '{}' else '–ù–µ—Ç—É'}\n" 

            if msg.chat.id > 0:
                photos = []
                async for photo in app.get_chat_photos(msg.chat.id):
                    photos.append(photo)
                    break

                if len(photos) > 0:
                    # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º—É—é –ø–æ—Å–ª–µ–¥–Ω—é—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
                    photo = photos[0]

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await app.send_photo(chat_id=msg.chat.id, photo=photo.file_id, caption=text)
                else:
                    await app.send_photo(chat_id=msg.chat.id, photo=f'https://picsum.photos/seed/{msg.from_user.id}/600/?blur', caption=text)
            else:
                await app.send_photo(chat_id=msg.chat.id, photo=f'https://picsum.photos/seed/{msg.from_user.id}/600/?blur', caption=text)


    async def handle_komandy(_, msg):
        url = 'https://teletype.in/@aicy_docs/aicy_08_08_24'
        await app.send_message(msg.chat.id, f'–ö–æ–º–∞–Ω–¥—ã AICY | Amethyst Light\n{url}')

    async def handle_razrabotchik(_, msg):
        # Implement the handler logic here
        pass

    async def handle_rp_komandy(_, msg):
        user = db.find_by_column('users', 'id', msg.from_user.id)
        if user:
            user = user[0]
            name = util.get_user_name(user)
            text = f"{name},\n\n–†–æ–ª–µ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä–∞—Ö (–†–ü) –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–ª–∏ –∏–≥—Ä–æ–∫–∞.\n"
            text += "–û–Ω–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∏–≥—Ä—ã –æ–ø–∏—Å—ã–≤–∞—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂ –¥–µ–ª–∞–µ—Ç –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏, –¥–æ–±–∞–≤–ª—è—è –±–æ–ª—å—à–µ –∂–∏–≤–æ—Å—Ç–∏ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫ –∏–≥—Ä–µ.\n\n"
            text += "–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
            text += "  <i>*–æ–±–Ω—è—Ç—å*</i>\n"
            text += "  <i>*–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å*</i>\n"
            text += "  <i>*–ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–Ω—è—Ç–∏—è–º*</i>\n"
            text += "\n–†–ü-–ö–æ–º–∞–Ω–¥ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ!) –°–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤—Å–µ?"

            await msg.reply_text(text)

    async def handle_hab_bota(_, msg):
        # Implement the handler logic here
        pass

    async def handle_balans(_, msg):
        # Implement the handler logic here
        pass


    # Main handler
    @app.on_message(filters.text)
    async def main_handler(client, msg):
        await util.check_user(db, msg)
        await log_bot(msg)

        # Check for specific commands and call the respective handler
        if msg.text in ["–ê–Ω–∫–µ—Ç–∞üå∏", "–∞–Ω–∫–µ—Ç–∞", "–∞–Ω–∫–µ—Ç–∞", ".–∞–Ω–∫–µ—Ç–∞", "/–∞–Ω–∫–µ—Ç–∞"]:
            await handle_anketa(client, msg)
        elif msg.text in ["–ö–æ–º–∞–Ω–¥—ãüç≠", "–ö–æ–º–∞–Ω–¥—ã", "–∫–æ–º–∞–Ω–¥—ã", ".–∫–æ–º–∞–Ω–¥—ã", "/–∫–æ–º–∞–Ω–¥—ã"]:
            await handle_komandy(client, msg)
        elif msg.text in ["–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫üèµ"] and msg.chat.id < 0:
            await handle_razrabotchik(client, msg)
        elif msg.text in ["–†–ü-–∫–æ–º–∞–Ω–¥—ã‚ú®", "–†–ø—à–∫–∏", "—Ä–ø—à–∫–∏", ".—Ä–ø—à–∫–∏", "/—Ä–ø—à–∫–∏"]:
            await handle_rp_komandy(client, msg)
        elif msg.text in ["–•–∞–± –±–æ—Ç–∞üåï"] and msg.chat.id < 0:
            await handle_hab_bota(client, msg)
        elif msg.text in ["–ë–∞–ª–∞–Ω—Åüåª", "–ë–∞–ª–∞–Ω—Å", "–±–∞–ª–∞–Ω—Å", ".–±–∞–ª–∞–Ω—Å", "/–±–∞–ª–∞–Ω—Å"]:
            await handle_balans(client, msg) 
        elif msg.text.startswith('*') and msg.text.endswith('*') and msg.chat.id < 0:
            if msg.reply_to_message:
                await util.rp_command(app, msg, texts, db)
            else:
                await msg.reply_text("–†–ü-–ö–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç–æ–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞!")